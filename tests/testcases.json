[
	{
		"name": "Smoke check",
		"data": {
			"a": "11",
			"b": "2"
		},
		"testcases": [
			{
				"name": "Addition",
				"data": {
					"operator": "add"
				},
				"expects": {
					"error": false,
					"result": "13"
				}
			},
			{
				"name": "Subtraction",
				"data": {
					"operator": "subtract"
				},
				"expects": {
					"error": false,
					"result": "9"
				}
			},
			{
				"name": "Multiplication",
				"data": {
					"operator": "multiply"
				},
				"expects": {
					"error": false,
					"result": "22"
				}
			},
			{
				"name": "Division",
				"data": {
					"operator": "divide"
				},
				"expects": {
					"error": false,
					"result": "5.5"
				}
			}
		]
	},
	{
		"name": "Input validation",
		"data": {
			"operator": "add"
		},
		"testcases": [
			{
				"name": "Invalid operator",
				"data": {
					"a": "1",
					"b": "2",
					"operator": "Square root"
				},
				"expects": {
					"error": true,
					"result": "Invalid operator."
				}
			},
			{
				"name": "First number",
				"data": {
					"b": "2"
				},
				"testcases": [
					{
						"name": "No value",
						"data": {
							"a": null
						},
						"expects": {
							"error": true,
							"result": "First number is required."
						}
					},
					{
						"name": "Invalid format",
						"data": {
							"a": "non-number"
						},
						"expects": {
							"error": true,
							"result": "First number has invalid format."
						}
					},
					{
						"name": "Hex format",
						"data": {
							"a": "0x308"
						},
						"expects": {
							"error": true,
							"result": "First number has invalid format."
						}
					},
					{
						"name": "Mixed dots",
						"data": {
							"a": "1..2"
						},
						"expects": {
							"error": true,
							"result": "First number has invalid format."
						}
					},
					{
						"name": "Multiple signs",
						"data": {
							"a": "-+-3"
						},
						"expects": {
							"error": true,
							"result": "First number has invalid format."
						}
					},
					{
						"name": "Trailing dot (start)",
						"data": {
							"a": ".1"
						},
						"expects": {
							"error": false,
							"result": "2.1"
						}
					},
					{
						"name": "Trailing dot (end)",
						"data": {
							"a": "1."
						},
						"expects": {
							"error": false,
							"result": "3"
						}
					},
					{
						"name": "Wrong type",
						"data": {
							"a": ["non-number"]
						},
						"expects": {
							"error": true,
							"result": "First number is invalid."
						}
					},
					{
						"name": "Overflown",
						"data": {
							"a": "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
						},
						"expects": {
							"error": true,
							"result": "First number falls outside the allowed limit (-10^100, 10^100)"
						}
					},
					{
						"name": "Too small",
						"data": {
							"a": "0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
							"b": "2",
							"operator": "multiply"
						},
						"expects": {
							"error": false,
							"result": "0"
						}
					}
				]
			},
			{
				"name": "Second number",
				"data": {
					"a": "2"
				},
				"testcases": [
					{
						"name": "No value",
						"data": {
							"b": null
						},
						"expects": {
							"error": true,
							"result": "Second number is required."
						}
					},
					{
						"name": "Invalid format",
						"data": {
							"b": "non-number"
						},
						"expects": {
							"error": true,
							"result": "Second number has invalid format."
						}
					},
					{
						"name": "Hex format",
						"data": {
							"b": "0x308"
						},
						"expects": {
							"error": true,
							"result": "Second number has invalid format."
						}
					},
					{
						"name": "Mixed dots",
						"data": {
							"b": "1..2"
						},
						"expects": {
							"error": true,
							"result": "Second number has invalid format."
						}
					},
					{
						"name": "Multiple signs",
						"data": {
							"b": "-+-3"
						},
						"expects": {
							"error": true,
							"result": "Second number has invalid format."
						}
					},
					{
						"name": "Trailing dot (start)",
						"data": {
							"b": ".1"
						},
						"expects": {
							"error": false,
							"result": "2.1"
						}
					},
					{
						"name": "Trailing dot (end)",
						"data": {
							"b": "1."
						},
						"expects": {
							"error": false,
							"result": "3"
						}
					},
					{
						"name": "Wrong type",
						"data": {
							"b": ["non-number"]
						},
						"expects": {
							"error": true,
							"result": "Second number is invalid."
						}
					},
					{
						"name": "Overflown",
						"data": {
							"b": "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
						},
						"expects": {
							"error": true,
							"result": "Second number falls outside the allowed limit (-10^100, 10^100)"
						}
					},
					{
						"name": "Too small",
						"data": {
							"a": "2",
							"b": "0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
							"operator": "multiply"
						},
						"expects": {
							"error": false,
							"result": "0"
						}
					}
				]
			},
			{
				"name": "Division by zero",
				"data": {
					"a": "1",
					"b": "0",
					"operator": "divide"
				},
				"expects": {
					"error": true,
					"result": "Division by zero detected!"
				}
			}
		]
	},
	{
		"name": "Result validation",
		"testcases": [
			{
				"name": "Result too large",
				"data": {
					"a": "5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
					"b": "2",
					"operator": "multiply"
				},
				"expects": {
					"error": true,
					"result": "Result falls outside the allowed limit (-10^100, 10^100)"
				}
			},
			{
				"name": "Result too small",
				"data": {
					"a": "0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
					"b": "10",
					"operator": "divide"
				},
				"expects": {
					"error": false,
					"result": "0"
				}
			},
			{
				"name": "Floating point error",
				"data": {
					"a": "0.1",
					"b": "0.2",
					"operator": "add"
				},
				"expects": {
					"error": false,
					"result": "0.3"
				}
			},
			{
				"name": "No exponentation form",
				"data": {
					"a": "0.00000000000000001",
					"b": "100000000000",
					"operator": "divide"
				},
				"expects": {
					"error": false,
					"result": "0.0000000000000000000000000001"
				}
			}
		]
	}
]