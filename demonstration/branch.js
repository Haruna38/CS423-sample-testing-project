const numberToMonth = function (number) {
    switch (number) {
        case 1: return "January";
        case 2: return "February";
        case 3: return "March";
        case 4: return "April";
        case 5: return "May";
        case 6: return "June";
        case 7: return "July";
        case 8: return "August";
        case 9: return "September";
        case 10: return "October";
        case 11: return "November";
        case 12: return "December";
        default: throw "Invalid month number";
    }
}

// Test cases generated by ChatGPT
/*
const assert = require('assert');

describe('numberToMonth', () => {
    it('should return "January" for input 1', () => {
        assert.strictEqual(numberToMonth(1), "January");
    });

    it('should return "February" for input 2', () => {
        assert.strictEqual(numberToMonth(2), "February");
    });

    it('should return "March" for input 3', () => {
        assert.strictEqual(numberToMonth(3), "March");
    });

    it('should return "April" for input 4', () => {
        assert.strictEqual(numberToMonth(4), "April");
    });

    it('should return "May" for input 5', () => {
        assert.strictEqual(numberToMonth(5), "May");
    });

    it('should return "June" for input 6', () => {
        assert.strictEqual(numberToMonth(6), "June");
    });

    it('should return "July" for input 7', () => {
        assert.strictEqual(numberToMonth(7), "July");
    });

    it('should return "August" for input 8', () => {
        assert.strictEqual(numberToMonth(8), "August");
    });

    it('should return "September" for input 9', () => {
        assert.strictEqual(numberToMonth(9), "September");
    });

    it('should return "October" for input 10', () => {
        assert.strictEqual(numberToMonth(10), "October");
    });

    it('should return "November" for input 11', () => {
        assert.strictEqual(numberToMonth(11), "November");
    });

    it('should return "December" for input 12', () => {
        assert.strictEqual(numberToMonth(12), "December");
    });

    it('should throw an error for invalid input 0', () => {
        assert.throws(() => numberToMonth(0), /Invalid month number/);
    });

    it('should throw an error for invalid input 13', () => {
        assert.throws(() => numberToMonth(13), /Invalid month number/);
    });
});
*/